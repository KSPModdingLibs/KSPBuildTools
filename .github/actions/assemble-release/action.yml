name: assemble-release

inputs:
  artifacts:
    description: Space-separated list of file globs to include in the output artifact
    default: GameData LICENSE* README* CHANGELOG*
  output-file-name:
    description: Output artifact name
    default: ${{ github.event.repository.name || 'release'}}
  release-staging:
    description: >
      Path to staging directory. Defaults to the `RELEASE_STAGING` environment environment variable, 
      or '/tmp/release' if that is not set.
    default: ${{ env.RELEASE_STAGING || '/tmp/release' }}


outputs:
  artifact-id:
    value: ${{ steps.upload-artifact.outputs.artifact-id }}
  artifact-url:
    value: ${{ steps.upload-artifact.outputs.artifact-url }}

runs:
  using: composite
  steps:
    - name: Assemble Release
      shell: bash
      run: |
        mkdir -p ${{ inputs.release-staging  }}
        # TODO: delete pdb files?  run some kind of assembly script?
        cp -r -v ${{ inputs.artifacts }} ${{ inputs.release-staging }} || :
        cd ${{ inputs.release-staging }}
        zip -r ${{ github.workspace }}/${{ inputs.output-file-name }}.zip .
        echo 'ARTIFACT_FILENAME=${{ inputs.output-file-name }}' >> $GITHUB_ENV

    - name: Upload Artifact
      id: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        path: ${{ inputs.release-staging }}
        name: ${{ inputs.output-file-name }}
        if-no-files-found: error
