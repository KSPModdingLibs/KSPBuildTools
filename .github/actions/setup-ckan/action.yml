name: "Setup CKAN"

inputs:
  ckan-version:
    description: >
      CKAN tag to install. set to an empty string to always install the most recent version. 
      See https://github.com/KSP-CKAN/CKAN/tags for a list of available tags
    default: ''

  ckan-repo:
    description: '[HOST/]OWNER/REPO of the CKAN github repository to pull from. Defaults to the mainline version'
    default: 'https://github.com/KSP-CKAN/CKAN'

  ckan-compatible-versions:
    description: KSP versions to mark as compatible
    type: string
    default: |
      1.12
      1.11
      1.10
      1.9
      1.8

  ckan-filters:
    description: CKAN filters to enable
    type: string
    default: |
      .dds
      .png
      .bmp
      .mu 
      .mbm
      .jpg
      .wav

  dependency-identifiers:
    description: CKAN mod identifiers to install
    type: string

runs:
  using: composite
  steps:
    - name: Install CKAN
      shell: bash
      run: |
        gh release download ${{ inputs.ckan-version }} --repo ${{ inputs.ckan-repo }} --pattern 'ckan*.deb' -O ckan.deb
        ${{ env.ACT && 'sudo apt update' }}
        sudo apt install ./ckan.deb
        ckan version
      env:
        GH_TOKEN: ${{ github.token }}

    - name: Setup CKAN Instance
      shell: bash
      run: |
        ${{ runner.debug && 'echo "$PATH"' }}
        ${{ runner.debug && 'ls -la $GITHUB_WORKSPACE/ckan' }}
        ckan instance fake --set-default KSP ${{ env.KSPRoot }} 1.12.5 --game KSP --MakingHistory 1.9.1 --BreakingGround 1.7.1
        ckan update

    - name: Setup CKAN Compatible Versions
      shell: bash
      if: inputs.ckan-compatible-versions != ''
      run: |
        for version in $VERSIONS; do
        ckan compat add "$version"
        done
      env:
        VERSIONS: ${{ inputs.ckan-compatible-versions }}

    - name: Setup CKAN Filter
      shell: bash
      if: inputs.ckan-filters != ''
      run: |
        for filter in $FILTERS; do
        ckan filter add "$filter"
        done
      env:
        FILTERS: ${{ inputs.ckan-filters }}

    - name: Install CKAN Mods
      shell: bash
      if: inputs.dependency-identifiers != ''
      run: ckan install --no-recommends --headless $IDENTIFIERS
      env:
        IDENTIFIERS: ${{ inputs.dependency-identifiers }}
